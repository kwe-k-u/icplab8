#include <iostream>
#include <cstdio>
using namespace std;




//function to give the size of the 1d array depending on the lenght of the 2d array
//the size of the 1d array is the sum of integers from the size of the 2d to 0
const int consecutiveSum(int size){
	const int index = ((size +1)*size)/2;
	return index;
}


int twoDimArray[8][8] = {}; //two dimensional array generated by function
int oneDimArray[12672] = {}; //one dimensional array from transfer of two dimentional array
int translatedTwoDimArray[0][0] = {}; //two dimensional array from the transpose of one dimensional array





//function to generate the triangular 2d array from the passed size
void genArray(  int size){
for (int row = 0; row < size; row++){
	for (int column = 0; column <= row; column++){
		int r = (rand()%1000)+1;
		twoDimArray[row][column] = r;
		// cout << r;
	}
}

}



//method to list out all the elements in the two dimensional array
void display2array(int size){
	for (int row = 0; row <size; row++){
		for (int column = 0; column < size; column++){
		cout << translatedTwoDimArray[row][column] << " ";
		}
		cout << endl; // move to next line
	}
}



//function to 1d index in a 2d triangular array
void InverseIndex(int index, int row, int column){//column and int are temporary

	while (row <= column){
		column -= row;
		row ++; //todo return row and column
	}

}


//function to turn the 2d index into a 1d index
int LinearIndex(int i, int j){
	int index = consecutiveSum(i) - (i -j);//return index
	return index;
}



//function to turn a 2d triangualr array into a 1d array
void make1dim(int size){

	for(int index = 0; index <size; index++){
		int row = 0;
		int column = index;
		  int newIndex =LinearIndex(row, column);
		oneDimArray[newIndex] = twoDimArray[row][column];
	}
}




//function to display elements in a 1d array
void display1array(int size){
	for (int i = 0; i < consecutiveSum(size); i++){
		cout << oneDimArray[i] << " ";
	}
}



//function to convert 1d array into 2d triangular array
void make2dim(int size){
	for (int i = 0; i < consecutiveSum(size); i++){

	}
}






//main function
int main(){
	int list[3] = {8, 32, 8}; //list of the lengths that the 2d array will take


	genArray(8);
	// cout << "Two dim array" << endl;
	// display2array(8);
	make1dim(8);
	// cout <<endl << "One dim array" << endl;
	// display1array(8);
	make2dim(8);
	// cout <<endl << "Translated 2 dim array" << endl;
	// display2array(8);

	return 0;
}
